// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lm.helloworld.proto

#ifndef PROTOBUF_lm_2ehelloworld_2eproto__INCLUDED
#define PROTOBUF_lm_2ehelloworld_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_lm_2ehelloworld_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHelloworldRequestImpl();
void InitDefaultsHelloworldRequest();
void InitDefaultsHelloworldResponseImpl();
void InitDefaultsHelloworldResponse();
inline void InitDefaults() {
  InitDefaultsHelloworldRequest();
  InitDefaultsHelloworldResponse();
}
}  // namespace protobuf_lm_2ehelloworld_2eproto
namespace Lm {
class HelloworldRequest;
class HelloworldRequestDefaultTypeInternal;
extern HelloworldRequestDefaultTypeInternal _HelloworldRequest_default_instance_;
class HelloworldResponse;
class HelloworldResponseDefaultTypeInternal;
extern HelloworldResponseDefaultTypeInternal _HelloworldResponse_default_instance_;
}  // namespace Lm
namespace Lm {

// ===================================================================

class HelloworldRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Lm.HelloworldRequest) */ {
 public:
  HelloworldRequest();
  virtual ~HelloworldRequest();

  HelloworldRequest(const HelloworldRequest& from);

  inline HelloworldRequest& operator=(const HelloworldRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HelloworldRequest(HelloworldRequest&& from) noexcept
    : HelloworldRequest() {
    *this = ::std::move(from);
  }

  inline HelloworldRequest& operator=(HelloworldRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloworldRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HelloworldRequest* internal_default_instance() {
    return reinterpret_cast<const HelloworldRequest*>(
               &_HelloworldRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HelloworldRequest* other);
  friend void swap(HelloworldRequest& a, HelloworldRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HelloworldRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  HelloworldRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HelloworldRequest& from);
  void MergeFrom(const HelloworldRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HelloworldRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string str = 2;
  void clear_str();
  static const int kStrFieldNumber = 2;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 opt = 3;
  void clear_opt();
  static const int kOptFieldNumber = 3;
  ::google::protobuf::int32 opt() const;
  void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Lm.HelloworldRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 opt_;
  mutable int _cached_size_;
  friend struct ::protobuf_lm_2ehelloworld_2eproto::TableStruct;
  friend void ::protobuf_lm_2ehelloworld_2eproto::InitDefaultsHelloworldRequestImpl();
};
// -------------------------------------------------------------------

class HelloworldResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Lm.HelloworldResponse) */ {
 public:
  HelloworldResponse();
  virtual ~HelloworldResponse();

  HelloworldResponse(const HelloworldResponse& from);

  inline HelloworldResponse& operator=(const HelloworldResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HelloworldResponse(HelloworldResponse&& from) noexcept
    : HelloworldResponse() {
    *this = ::std::move(from);
  }

  inline HelloworldResponse& operator=(HelloworldResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloworldResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HelloworldResponse* internal_default_instance() {
    return reinterpret_cast<const HelloworldResponse*>(
               &_HelloworldResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(HelloworldResponse* other);
  friend void swap(HelloworldResponse& a, HelloworldResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HelloworldResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  HelloworldResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HelloworldResponse& from);
  void MergeFrom(const HelloworldResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HelloworldResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string str = 1;
  void clear_str();
  static const int kStrFieldNumber = 1;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // int32 opt = 2;
  void clear_opt();
  static const int kOptFieldNumber = 2;
  ::google::protobuf::int32 opt() const;
  void set_opt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Lm.HelloworldResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::int32 opt_;
  mutable int _cached_size_;
  friend struct ::protobuf_lm_2ehelloworld_2eproto::TableStruct;
  friend void ::protobuf_lm_2ehelloworld_2eproto::InitDefaultsHelloworldResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HelloworldRequest

// int32 id = 1;
inline void HelloworldRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 HelloworldRequest::id() const {
  // @@protoc_insertion_point(field_get:Lm.HelloworldRequest.id)
  return id_;
}
inline void HelloworldRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Lm.HelloworldRequest.id)
}

// string str = 2;
inline void HelloworldRequest::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloworldRequest::str() const {
  // @@protoc_insertion_point(field_get:Lm.HelloworldRequest.str)
  return str_.GetNoArena();
}
inline void HelloworldRequest::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Lm.HelloworldRequest.str)
}
#if LANG_CXX11
inline void HelloworldRequest::set_str(::std::string&& value) {
  
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Lm.HelloworldRequest.str)
}
#endif
inline void HelloworldRequest::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Lm.HelloworldRequest.str)
}
inline void HelloworldRequest::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Lm.HelloworldRequest.str)
}
inline ::std::string* HelloworldRequest::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:Lm.HelloworldRequest.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloworldRequest::release_str() {
  // @@protoc_insertion_point(field_release:Lm.HelloworldRequest.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloworldRequest::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:Lm.HelloworldRequest.str)
}

// int32 opt = 3;
inline void HelloworldRequest::clear_opt() {
  opt_ = 0;
}
inline ::google::protobuf::int32 HelloworldRequest::opt() const {
  // @@protoc_insertion_point(field_get:Lm.HelloworldRequest.opt)
  return opt_;
}
inline void HelloworldRequest::set_opt(::google::protobuf::int32 value) {
  
  opt_ = value;
  // @@protoc_insertion_point(field_set:Lm.HelloworldRequest.opt)
}

// -------------------------------------------------------------------

// HelloworldResponse

// string str = 1;
inline void HelloworldResponse::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloworldResponse::str() const {
  // @@protoc_insertion_point(field_get:Lm.HelloworldResponse.str)
  return str_.GetNoArena();
}
inline void HelloworldResponse::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Lm.HelloworldResponse.str)
}
#if LANG_CXX11
inline void HelloworldResponse::set_str(::std::string&& value) {
  
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Lm.HelloworldResponse.str)
}
#endif
inline void HelloworldResponse::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Lm.HelloworldResponse.str)
}
inline void HelloworldResponse::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Lm.HelloworldResponse.str)
}
inline ::std::string* HelloworldResponse::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:Lm.HelloworldResponse.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloworldResponse::release_str() {
  // @@protoc_insertion_point(field_release:Lm.HelloworldResponse.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloworldResponse::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:Lm.HelloworldResponse.str)
}

// int32 opt = 2;
inline void HelloworldResponse::clear_opt() {
  opt_ = 0;
}
inline ::google::protobuf::int32 HelloworldResponse::opt() const {
  // @@protoc_insertion_point(field_get:Lm.HelloworldResponse.opt)
  return opt_;
}
inline void HelloworldResponse::set_opt(::google::protobuf::int32 value) {
  
  opt_ = value;
  // @@protoc_insertion_point(field_set:Lm.HelloworldResponse.opt)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Lm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lm_2ehelloworld_2eproto__INCLUDED
